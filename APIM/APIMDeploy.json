{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "service_apim_name": {
      "defaultValue": "",
      "type": "String"
    },
    "apim_location": {
      "defaultValue": "Southeast Asia",
      "type": "String"
    },
    "publisher_email": {
      "defaultValue": "",
      "type": "String"
    },
    "publisher_name": {
      "defaultValue": "",
      "type": "String"
    },
    "sku_name": {
      "defaultValue": "Developer",
      "type": "String"
    },
    "vntResourceGroup": {
      "defaultValue": "",
      "type": "String"
    },
    "vntName": {
      "defaultValue": "",
      "type": "String"
    },
    "subnetName": {
      "defaultValue": "",
      "type": "String"
    },
    "omsName": {
      "defaultValue": "",
      "type": "String"
    },
    "omsLocation": {
      "defaultValue": "Southeast Asia",
      "type": "String"
    },
    "omsTier": {
      "type": "string",
      "defaultValue": "Free",
      "allowedValues": [
        "Free",
        "Standalone",
        "PerNode"
      ],
      "metadata": {
        "description": "Service Tier: Free, Standalone, or PerNode"
      }
    },
    "notificationHubNamespaceName": {
      "type": "string",
      "defaultValue": ""
    },
    "notificationHubName": {
      "type": "string",
      "defaultValue": ""
    },
    "notificationHubSkuName": {
      "type": "string",
      "defaultValue": "free",
      "allowedValues": [
        "free",
        "basic",
        "standard"
      ]
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      },
      "defaultValue": "Standard_LRS"
    },
    "functionapp_name": {
      "type": "string",
      "defaultValue": ""
    },
    "service_plan_name": {
      "type": "string",
      "defaultValue": ""
    },
    "skuName": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes plan's instance count"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2016-12-01",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "[parameters('service_plan_name')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('service_plan_name')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[parameters('functionapp_name')]",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [ "[concat('Microsoft.Web/Sites/', parameters('functionapp_name'))]" ],
          "properties": {
            "Example_Custom_AppSetting": "...",
            "FUNCTIONS_EXTENSION_VERSION": "~1",
            "AzureWebJobsDashboard": "[Concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
            "AzureWebJobsStorage": "[Concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[Concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
            "WEBSITE_CONTENTSHARE": "[toLower(parameters('functionapp_name'))]",
            "HeaderContentType": "",
            "ServiceBusAccesskey": "",
            "ServieBusBaseUrl": "",
            "ServiceBusQueue" : "" 
          }
        }
      ],
      "properties": {
        "name": "[parameters('functionapp_name')]",
        "hostNames": [ "[concat(parameters('functionapp_name'),'.azurewebsites.net')]" ],
        "enabledHostNames": [
          "[concat(parameters('functionapp_name'),'.azurewebsites.net')]",
          "[concat(parameters('functionapp_name'),'.scm.azurewebsites.net')]"
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('service_plan_name'))]",
        "siteConfig": {
          "alwaysOn": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('service_plan_name'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service",
      "sku": {
        "name": "[parameters('sku_name')]",
        "capacity": 1
      },
      "name": "[parameters('service_apim_name')]",
      "apiVersion": "2017-03-01",
      "location": "[parameters('apim_location')]",
      "properties": {
        "publisherEmail": "[parameters('publisher_email')]",
        "publisherName": "[parameters('publisher_name')]",
        "virtualNetworkConfiguration": {
          "subnetResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('vntResourceGroup') , '/providers/Microsoft.Network/virtualNetworks/', parameters('vntName') , '/subnets/', parameters('subnetName'))]"
        },
        "virtualNetworkType": "External"
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', parameters('service_apim_name'))]"
          ],
          "apiVersion": "2015-07-01",
          "properties": {
            "workspaceId": "[concat(resourceGroup().id, '/providers/microsoft.operationalinsights/workspaces/', parameters('omsName'))]",
            "logs": [
              {
                "category": "GatewayLogs",
                "enabled": true
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT1M",
                "enabled": true
              }
            ]
          }
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('omsName'))]"
      ]
    },
    {
      "name": "[parameters('omsName')]",
      "apiVersion": "2015-11-01-preview",
      "properties": {
        "sku": {
          "name": "[parameters('omsTier')]"
        }
      },
      "type": "Microsoft.OperationalInsights/workspaces",
      "location": "[parameters('omsLocation')]",
      "resources": [
        {
          "name": "[concat('LogicAppsManagement(', parameters('omsName'), ')')]",
          "apiVersion": "2015-11-01-preview",
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/', 'LogicAppsManagement(', parameters('omsName'), ')')]",
          "properties": {
            "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('omsName'))]"
          },
          "type": "Microsoft.OperationsManagement/solutions",
          "location": "[parameters('omsLocation')]",
          "plan": {
            "name": "[concat('LogicAppsManagement(', parameters('omsName'), ')')]",
            "promotionCode": "",
            "product": "OMSGallery/LogicAppsManagement",
            "publisher": "Microsoft"
          },
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('omsName'))]"
          ]
        }
      ]
    },
    {
      "apiVersion": "2014-09-01",
      "kind": "NotificationHub",
      "name": "[parameters('notificationHubNamespaceName')]",
      "type": "Microsoft.NotificationHubs/namespaces",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NotificationHubNamespace"
      },
      "sku": {
        "name": "[parameters('notificationHubSkuName')]"
      },
      "properties": {
        "namespaceType": "NotificationHub"
      },
      "resources": [
        {
          "apiVersion": "2014-09-01",
          "name": "[concat(parameters('notificationHubNamespaceName'),'/',parameters('notificationHubName'))]",
          "type": "Microsoft.NotificationHubs/namespaces/notificationHubs",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[parameters('notificationHubNamespaceName')]"
          ],
          "properties": {
            "name": "[parameters('notificationHubName')]"
          },
          "tags": {
            "displayName": "NotificationHub"
          }
        }
      ]
    }
  ],
      "outputs": {}
 }